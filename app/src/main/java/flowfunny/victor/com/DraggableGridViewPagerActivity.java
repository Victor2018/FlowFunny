package flowfunny.victor.com;import android.content.Intent;import android.os.Bundle;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.util.Log;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import view.victor.com.DateTimePickerDlg;import view.victor.com.DraggableGridViewPager;import view.victor.com.VictorDialog;import view.victor.com.VictorPopWindow;public class DraggableGridViewPagerActivity extends AppCompatActivity implements        View.OnClickListener,AdapterView.OnItemClickListener,        AdapterView.OnItemLongClickListener,        DraggableGridViewPager.OnRearrangeListener,        DraggableGridViewPager.OnPageChangeListener{    private static String TAG = "DraggableGridViewPagerActivity";    private FloatingActionButton mFab;    private DraggableGridViewPager mDraggableGridViewPager;    private ArrayAdapter<String> mAdapter;    private int mGridCount;    private VictorPopWindow mPopWindow;    private VictorDialog mDlg;    private DateTimePickerDlg mDateTimePickerDlg;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_draggable_grid_view_pager);        initialize();    }    private void initialize () {        mFab = (FloatingActionButton) findViewById(R.id.fab);        mDraggableGridViewPager = (DraggableGridViewPager) findViewById(R.id.draggable_grid_view_pager);        mFab.setOnClickListener(this);        mDraggableGridViewPager.setOnPageChangeListener(this);        mDraggableGridViewPager.setOnItemClickListener(this);        mDraggableGridViewPager.setOnItemLongClickListener(this);        mDraggableGridViewPager.setOnRearrangeListener(this);        mPopWindow = new VictorPopWindow(this);        mDlg = new VictorDialog(this);        mDateTimePickerDlg = new DateTimePickerDlg(this,DateTimePickerDlg.sdf1);        initAdapter();        initData();        mDraggableGridViewPager.setAdapter(mAdapter);    }    private void initData () {        String[] menus = getResources().getStringArray(R.array.menu_array);        for (int i=0;i<menus.length;i++) {            mAdapter.add(menus[i]);        }    }    private void showToast(String msg) {        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();    }    private void initAdapter () {        mAdapter = new ArrayAdapter<String>(this, 0) {            @Override            public View getView(int position, View convertView, ViewGroup parent) {                final String text = getItem(position);                if (convertView == null) {                    convertView = (TextView) getLayoutInflater().inflate(R.layout.draggable_grid_item, null);                    convertView.setTag(position);                }                ((TextView) convertView).setText(text);                return convertView;            }        };    }    @Override    public void onClick(View view) {        switch (view.getId()) {            case R.id.fab:                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)                        .setAction("Action", null).show();                finish();                break;        }    }    @Override    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {        showToast(((TextView) view).getText().toString());        onMenuItemClickAction(position,view);    }    @Override    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {        showToast(((TextView) view).getText().toString() + " long clicked!!!");        return true;    }    @Override    public void onRearrange(int oldIndex, int newIndex) {        Log.i(TAG, "OnRearrangeListener.onRearrange from=" + oldIndex + ", to=" + newIndex);        String item = mAdapter.getItem(oldIndex);        mAdapter.setNotifyOnChange(false);        mAdapter.remove(item);        mAdapter.insert(item, newIndex);        mAdapter.notifyDataSetChanged();    }    @Override    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {    }    @Override    public void onPageSelected(int position) {    }    @Override    public void onPageScrollStateChanged(int state) {    }    private void onMenuItemClickAction (int position,View view) {        Intent intent;        int action = (int) ((TextView) view).getTag();        switch (action) {            case 0://PopWindow                if (mPopWindow != null){                    mPopWindow.showPopWindow(view);                }                break;            case 1://Dialog                if (mDlg != null) {                    mDlg.show();                }                break;            case 2://SortListView                intent = new Intent(DraggableGridViewPagerActivity.this,SortListViewActivity.class);                startActivity(intent);                break;            case 3://WaveView                intent = new Intent(DraggableGridViewPagerActivity.this,WaveViewActivity.class);                startActivity(intent);                break;            case 4://RippleView                intent = new Intent(DraggableGridViewPagerActivity.this,RippleViewActivity.class);                startActivity(intent);                break;            case 5://PinnedHeaderExpandableListView                intent = new Intent(DraggableGridViewPagerActivity.this,PinnedHeaderExpandableListViewActivity.class);                startActivity(intent);                break;            case 6://VerticalSeekBarActivity                intent = new Intent(DraggableGridViewPagerActivity.this,VerticalSeekBarActivity.class);                startActivity(intent);                break;            case 7://KeywordsFlowActivity                intent = new Intent(DraggableGridViewPagerActivity.this,KeywordsFlowActivity.class);                startActivity(intent);                break;            case 8://DateTimePickerDlg                if (mDateTimePickerDlg != null) {                    mDateTimePickerDlg.show();                }                break;            case 9://GifViewActivity                intent = new Intent(DraggableGridViewPagerActivity.this,GifViewActivity.class);                startActivity(intent);                break;            case 10://RemoteInstallActivity                intent = new Intent(DraggableGridViewPagerActivity.this,RemoteInstallActivity.class);                startActivity(intent);                break;            case 11://SquareProgressBarActivity                intent = new Intent(DraggableGridViewPagerActivity.this,SquareProgressBarActivity.class);                startActivity(intent);                break;            case 12://ChartActivity                intent = new Intent(DraggableGridViewPagerActivity.this,ChartActivity.class);                startActivity(intent);                break;            case 13://HorizontalListViewActivity                intent = new Intent(DraggableGridViewPagerActivity.this,HorizontalListViewActivity.class);                startActivity(intent);                break;            case 14://自定义表盘                intent = new Intent(DraggableGridViewPagerActivity.this,WatchFaceActivity.class);                startActivity(intent);                break;        }    }}